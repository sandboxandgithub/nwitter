{"version":3,"sources":["fbase.js","components/Navigation.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Navigation","userObj","style","display","justifyContent","marginTop","to","marginRight","icon","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Nweet","nweetObj","isOwner","useState","isEditing","setIsEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","attachmentURL","refFromURL","toggleIsEditing","prev","onSubmit","ev","preventDefault","update","className","type","value","onChange","target","required","autoFocus","onClick","src","faTrash","faPencilAlt","NweetFactory","attachment","setAttachment","nweet","setNweet","attachmentRef","ref","child","uid","uuidv4","putString","res","getDownloadURL","collection","add","createdAt","Date","now","creatorId","placeholder","maxLength","htmlFor","faPlus","accept","files","reader","FileReader","onloadend","ev_f","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","key","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","marginBottom","faGoogle","faGithub","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32265e2e.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li><Link to=\"/\" style={{ marginRight: 10 }}><FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" /></Link></li>\r\n                <li>\r\n                    <Link to=\"/profile\"\r\n                        style={{marginLeft: 10, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", fontSize: 12}}><FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                        <span style={{ marginTop: 10 }}>{userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}</span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation","import React, { useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm('Are you sure you want to delete this nweet?');\r\n        if (ok) {\r\n            // delete\r\n            // await dbService.collection('nweets').doc(nweetObj.id).delete();\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if (nweetObj.attachmentURL) { await storageService.refFromURL(nweetObj.attachmentURL).delete(); }\r\n        }\r\n    }\r\n\r\n    const toggleIsEditing = () => {\r\n        setIsEditing(prev => !prev);\r\n    }\r\n\r\n    const onChange = (ev) => {\r\n        const { target: { value } } = ev;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const onSubmit = async (ev) => {\r\n        ev.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet\r\n        })\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {isEditing ? (\r\n                <>\r\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input type=\"text\" value={newNweet} onChange={onChange} required=\"required\" autoFocus=\"autoFocus\" className=\"formInput\" />\r\n                    <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                </form>\r\n                <span onClick={toggleIsEditing} className=\"formBtn cancelBtn\">Cancel</span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                <h4>{nweetObj.text}</h4>\r\n                {nweetObj.attachmentURL && <img src={nweetObj.attachmentURL} />}\r\n                {isOwner && (\r\n                    <div className=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}><FontAwesomeIcon icon={faTrash} /></span>\r\n                        <span onClick={toggleIsEditing}><FontAwesomeIcon icon={faPencilAlt} /></span>\r\n                  </div>\r\n                )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from 'react';\r\nimport { storageService, dbService } from 'fbase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [attachment, setAttachment] = useState();\r\n    const [nweet, setNweet] = useState(\"\");\r\n\r\n    const onSubmit = async (ev) => {\r\n        ev.preventDefault();\r\n        let attachmentURL = \"\";\r\n\r\n        if (!nweet) { return; }\r\n\r\n        if (attachment) {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const res = await attachmentRef.putString(attachment, 'data_url');\r\n            attachmentURL = await res.ref.getDownloadURL();\r\n        }\r\n        await dbService.collection('nweets').add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentURL\r\n        });\r\n        setNweet('');\r\n        setAttachment('');\r\n    };\r\n    const onChange = (ev) => {\r\n        const { target: { value } } = ev;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (ev) => {\r\n        const { target: { files } } = ev;\r\n        const reader = new FileReader();\r\n\r\n        reader.onloadend = (ev_f) => {\r\n            const { currentTarget: { result } } = ev_f;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(files[0]);\r\n\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input type=\"text\" value={nweet} onChange={onChange} placeholder=\"What's in your mind?\" maxLength=\"120\" className=\"factoryInput__input\" />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{ opacity: 0 }} />\r\n            \r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img src={attachment} style={{ backgroundImage: attachment }} />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import React, { useEffect, useState } from 'react';\r\nimport { dbService } from 'fbase';\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection('nweets').onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }} >\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n\r\n// const getNweets = async () => {\r\n//     const db_nweets = await dbService.collection('nweets').get();\r\n\r\n//     db_nweets.forEach((doc) => {\r\n//         const nweetObject = {\r\n//             ...doc.data(),\r\n//             id: doc.id\r\n//         }\r\n//         setNweets(prev => [nweetObject, ...prev]);\r\n//     });        \r\n// };","import React, { useState } from 'react';\r\nimport { authService } from 'fbase';\r\n\r\nfunction AuthForm() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (ev) => {\r\n        const { target: { name, value } } = ev;\r\n        if (name === 'email') {\r\n            setEmail(value);\r\n        } else if (name === 'password') {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (ev) => {\r\n        ev.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                // Create Account\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                // Login\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data)\r\n        } catch(err) {\r\n            setError(err.message)\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => {\r\n        setNewAccount(prev => { return !prev; });\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n            <input type=\"email\" name=\"email\" value={email} placeholder=\"Email\" onChange={onChange} required=\"required\" className=\"authInput\" />\r\n            <input type=\"password\" name=\"password\" value={password} placeholder=\"Password\" onChange={onChange} required=\"required\" className=\"authInput\" />\r\n            <input type=\"submit\" value={newAccount ? 'Create Account' : 'Login'} className=\"authInput authSubmit\" />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Login 화면으로 이동\" : \"계정 만들기\"}</span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthForm;","import React from 'react';\r\nimport { firebaseInstance, authService } from 'fbase';\r\nimport AuthForm from 'routes/AuthForm';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (ev) => {\r\n        const { target: { name } } = ev;\r\n        let provider;\r\n\r\n        if (name === 'btn_google') {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === 'btn_github') {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }} />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button name=\"btn_google\" onClick={onSocialClick} className=\"authBtn\">Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\r\n                <button name=\"btn_github\" onClick={onSocialClick} className=\"authBtn\">Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\r\n            </div>\r\n            <span>Auth</span>\r\n        </div>\r\n    );\r\n}\r\nexport default Auth;","import React, { useEffect, useState } from 'react';\r\nimport { authService, dbService } from 'fbase'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    let history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogoutClick = () => {\r\n        authService.signOut();\r\n        history.push('/')\r\n    };\r\n\r\n    const getMyNweets = async () => {\r\n        const res = await dbService.collection('nweets')\r\n            .where('creatorId', '==', userObj.uid)\r\n            .orderBy('createdAt', 'desc')\r\n            .get();\r\n        console.log(res.docs.map((doc) => doc.data()));\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, []);\r\n\r\n    const onChange = (ev) => {\r\n        const { target: { value } } = ev;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (ev) => {\r\n        ev.preventDefault();\r\n        if (newDisplayName === userObj.displayName) { return; }\r\n        await userObj.updateProfile({\r\n            displayName: newDisplayName\r\n        });\r\n        refreshUser();\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input type=\"text\" placeholder=\"Display name\" value={newDisplayName} onChange={onChange} autoFocus=\"autoFocus\" className=\"formInput\" />\r\n                <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{ marginTop: 10 }} />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>Logout</span>\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Navigation from 'components/Navigation';\r\nimport Home from 'routes/Home';\r\nimport Auth from 'routes/Auth';\r\nimport Profile from 'routes/Profile';\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <HashRouter>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div style={{ maxWidth: 890, width: \"100%\", margin: \"0 auto\", marginTop: 80, display: \"flex\", justifyContent: \"center\" }}>\r\n                        <Route exact path='/'><Home userObj={userObj} /></Route>\r\n                        <Route exact path='/profile'><Profile userObj={userObj} refreshUser={refreshUser} /></Route>\r\n                        <Redirect from='*' to='/' />\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path='/'><Auth /></Route>\r\n                        <Redirect from='*' to='/' />\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </HashRouter>\r\n    );\r\n}\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport { authService } from 'fbase';\nimport AppRouter from 'components/Router';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args)\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    })\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n  };\n\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} /> : 'Initializing....'}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport 'style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}